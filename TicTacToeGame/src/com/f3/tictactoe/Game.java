/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.f3.tictactoe;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 * Game Tic Tac Toe sederhana.
 * Di game ini kamu akan memulai dari giliran pertama, dan selanjutnya bergantian.
 * 
 * -------------------------------------
 * Bebas modifikasi untuk pembelajaran.
 * 
 * @author f3
 */
public class Game extends javax.swing.JFrame {

    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
        
        userData = new int[3][3];
        comData = new int[3][3];
        
        buttonLeft = new ArrayList<>();
        addItemList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setLocation(new java.awt.Point(700, 400));
        setResizable(false);

        jButton1.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Bandal", 1, 18)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bandal", 0, 18)); // NOI18N
        jLabel1.setText("F3");

        jLabel2.setFont(new java.awt.Font("Bandal", 0, 11)); // NOI18N
        jLabel2.setText("Apps");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        turn(jButton1, 0, 0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        turn(jButton2, 0, 1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        turn(jButton3, 0, 2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        turn(jButton4, 1, 0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        turn(jButton5, 1, 1);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        turn(jButton6, 1, 2);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        turn(jButton7, 2, 0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        turn(jButton8, 2, 1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        turn(jButton9, 2, 2);
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Game().setVisible(true);
        });
    }
    
    /**
     * Pergantian giliran.
     * @param button
     * @param indexRow
     * @param indexCol
     */
    private void turn(JButton button, int indexRow, int indexCol){
    	userData[indexRow][indexCol] = 1; // masukkan pilihan user ke user data
    	
    	setSell(button, "x", userData); // tampilkan pilihan
        
        computerTurn(); // giliran komputer
    }
    
    /**
     * Tampilkan pilihan lalu tentukan apakah salah satu player menang atau draw.
     * @param button
     * @param simbol
     * @param playerData
     */
    private void setSell(JButton button, String simbol, int[][] playerData){
        button.setText(simbol);
        button.setEnabled(false);
        
        buttonLeft.remove(button); // hapus item tombol di list yang sudah terpilih
        
        if(win(playerData)) {
        	JOptionPane.showMessageDialog(this,
					  (simbol == "x" ? "YOU WIN !!!" : "COMPUTER WIN !!! :P" ),
					  "Game Result", JOptionPane.PLAIN_MESSAGE);
        	clear();
        	
        } else {
        	if(draw()) {
	    		JOptionPane.showMessageDialog(this, "DRAW !", "Game Result", JOptionPane.PLAIN_MESSAGE);
	            clear();
        	}
    	}
    }
    
    /**
     * Giliran komputer.
     * komputer akan menganalisis dari data pilihan player dan dirinya sendiri untuk menentukan apakah dia akan bisa memenangkan pertandingan, mencegah player menang atau memilih secara random.
     */
    private void computerTurn() {
    	
    	if(start) { // jika baru mulai komputer memilih secara random
    		random();
    		
    		start = false;
    		
    	} else {
    		
        	for(int i = 0; i < 3; i++) { // di perulangan ini komputer akan menganalisis apakah kemungkinan dia bisa memenangkan pertandingan dari data miliknya
        		for(int j = 0; j < 3; j++) {
        			if(comData[i][j] == 0 && userData[i][j] == 0) { // jika pilihan di tombol dari index ini kosong (saya menentukan lewat data computer dan user)
        				comData[i][j] = 1; // maka tes dengan mengisi nilai 1 di data yang dimiliki komputer (juga berarti mencoba memilih sell/tombol)
        				
        				if(win(comData)) { // jika di tes hasilnya menang/true maka ini menjadi pilihan komputer
        					JButton button = getButton(i, j);
        					
        					setSell(button, "o", comData);
        					
        					return;
        				} else
        					comData[i][j] = 0; // jika sebaliknya kembalikan isi data yang di tes dengan 0
        			}
        		}
        	}
        	
        	for(int i = 0; i < 3; i++) { // di perulangan ini logikanya sama, tapi dengan tujuan mencoba mencegah user menang lewat data user jika hasil dari cara di atas tidak di dapat
        		for(int j = 0; j < 3; j++) {
        			if(comData[i][j] == 0 && userData[i][j] == 0) {
        				userData[i][j] = 1; // tes dengan mengisi data user dengan 1
        				
        				if(win(userData)) { // jika hasilnya menang/true (berarti user kemungkinan bisa menang), berarti ini akan menjadi pilihan komputer
        					JButton button = getButton(i, j);
        					
        					userData[i][j] = 0; // kembalikan isi data user yang di tes
        					saveSelectionToData(button);
        					setSell(button, "o", comData);
        					
        					return;
        				} else
        					userData[i][j] = 0;
        			}
        		}
        	}
        	
        	random(); // jika belum bisa menentukan komputer akan memilih secara random
    	}
    }
    
    /**
     * Memilih secara random.
     */
    private void random() {
    	int choosed = ((int)(Math.random() * 10)) % buttonLeft.size(); // membuat angka random (tidak lebih dari jumlah tombol yang tersisa
		
		JButton button = buttonLeft.get(choosed);
		saveSelectionToData(button); // simpan data pilihan computer
		
		setSell(button, "o", comData); // tampilkan pilihan
    }
    
    /**
     * Simpan data pilihan computer dari tombol yang terpilih oleh computer.
     * @param button
     */
    private void saveSelectionToData(JButton button) {
    	if(button.equals(jButton1))
    		comData[0][0] = 1;
    	else if(button.equals(jButton2))
    		comData[0][1] = 1;
    	else if(button.equals(jButton3))
    		comData[0][2] = 1;
    	else if(button.equals(jButton4))
    		comData[1][0] = 1;
    	else if(button.equals(jButton5))
    		comData[1][1] = 1;
    	else if(button.equals(jButton6))
    		comData[1][2] = 1;
    	else if(button.equals(jButton7))
    		comData[2][0] = 1;
    	else if(button.equals(jButton8))
    		comData[2][1] = 1;
    	else if(button.equals(jButton9))
    		comData[2][2] = 1;
    }
    
    /**
     * Cek pemenangan.
     * di sini di tentukan lewat parameter (data pilihan user atau computer)
     * @param playerData
     * @return
     */
    private boolean win(int[][] playerData) {
    	if(playerData[0][0] == 1 && playerData[0][1] == 1 && playerData[0][2] == 1)
    		return true;
    	else if(playerData[1][0] == 1 && playerData[1][1] == 1 && playerData[1][2] == 1)
    		return true;
    	else if(playerData[2][0] == 1 && playerData[2][1] == 1 && playerData[2][2] == 1)
    		return true;
    	else if(playerData[0][0] == 1 && playerData[1][1] == 1 && playerData[2][2] == 1)
    		return true;
    	else if(playerData[0][0] == 1 && playerData[1][0] == 1 && playerData[2][0] == 1)
    		return true;
    	else if(playerData[0][1] == 1 && playerData[1][1] == 1 && playerData[2][1] == 1)
    		return true;
    	else if(playerData[0][2] == 1 && playerData[1][2] == 1 && playerData[2][2] == 1)
    		return true;
    	else if(playerData[0][2] == 1 && playerData[1][1] == 1 && playerData[2][0] == 1)
    		return true;
    	else
    		return false;
    }
    
    /**
     * Tentukan tombol mana yang terpilih dari index baris dan kolom.
     * @param indexRow
     * @param indexCol
     * @return
     */
    private JButton getButton(int indexRow, int indexCol) {
    	if(indexRow == 0 && indexCol == 0)
    		return jButton1;
    	else if(indexRow == 0 && indexCol == 1)
    		return jButton2;
    	else if(indexRow == 0 && indexCol == 2)
    		return jButton3;
    	else if(indexRow == 1 && indexCol == 0)
    		return jButton4;
    	else if(indexRow == 1 && indexCol == 1)
    		return jButton5;
    	else if(indexRow == 1 && indexCol == 2)
    		return jButton6;
    	else if(indexRow == 2 && indexCol == 0)
    		return jButton7;
    	else if(indexRow == 2 && indexCol == 1)
    		return jButton8;
    	else
    		return jButton9;
    }
    
    /**
     * Tenentukan draw.
     * @return
     */
    private boolean draw(){
        return (buttonLeft.size() == 0 ? true : false);
    }
    
    /**
     * Bersihkan output, data dan property.
     */
    public void clear(){
        jButton1.setText("");
        jButton1.setEnabled(true);
        
        jButton8.setText("");
        jButton8.setEnabled(true);
        
        jButton2.setText("");
        jButton2.setEnabled(true);
        
        jButton6.setText("");
        jButton6.setEnabled(true);
        
        jButton9.setText("");
        jButton9.setEnabled(true);
        
        jButton3.setText("");
        jButton3.setEnabled(true);
        
        jButton4.setText("");
        jButton4.setEnabled(true);
        
        jButton7.setText("");
        jButton7.setEnabled(true);
        
        jButton5.setText("");
        jButton5.setEnabled(true);
        
        userData = new int[3][3];
        comData = new int[3][3];
        
        buttonLeft = new ArrayList<>();
        addItemList();
    }
    
    /**
     * Tambahkan semua tombol ke item list.
     * untuk menentukan sisa tombol terpilih
     */
    public void addItemList(){
        buttonLeft.add(jButton1);
        buttonLeft.add(jButton2);
        buttonLeft.add(jButton3);
        buttonLeft.add(jButton4);
        buttonLeft.add(jButton5);
        buttonLeft.add(jButton6);
        buttonLeft.add(jButton7);
        buttonLeft.add(jButton8);
        buttonLeft.add(jButton9);
    }
    
    
    
    /* property dan variable tambahan */
    private int[][] userData; // menyimpan data pilihan user/player untuk di analisa coomputer, terisi dengan nilai 1 jika terpilih dan 0 jika tidak
    private int[][] comData; // menyimpan data pilihan computer untuk di analisa dan menentukan apakah komputer akan menang, terisi dengan nilai 1 jika terpilih dan 0 jika tidak
    private List<JButton> buttonLeft; // pilihan tombol yang tersisa
    private static boolean start = true;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
